@page "/counter"
@rendermode @(new InteractiveAutoRenderMode(prerender: false))
@attribute [StreamRendering]
@inject HttpClient Http

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p>Hello @Username!</p>

<div>
  <p>&nbsp;</p>
  <p>@ApiResponse</p>
</div>

@code {
    private int currentCount = 0;
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private string Username = "";
    private string ApiResponse = "";

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;

            Username = state?.User?.Identity?.Name ?? string.Empty;
        }

        var data = await Http.GetFromJsonAsync<int[]>("/InternalData/GetData");

        ApiResponse = $"This data comes from an internal API: {string.Join(",", data)}";

        await base.OnInitializedAsync();
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnParametersSetAsync()
    {

    }
}
